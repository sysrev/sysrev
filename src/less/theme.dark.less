@darkText: rgba(35, 35, 35, 0.925);
@lightText: rgba(230, 230, 230, 0.925);

@mutedDarkText: rgba(60, 60, 60, 0.85);
@mutedLightText: rgba(200, 200, 200, 0.85);

@fadedDarkText: rgba(100, 100, 100, 0.3);
@fadedLightText: rgba(160, 160, 160, 0.3);

@text: @lightText;
@invertedText: @darkText;

@mutedText: @mutedLightText;
@mutedInvertedText: @mutedDarkText;

@fadedText: @fadedLightText;
@fadedInvertedText: @fadedDarkText;

@green: rgba(33, 186, 69, 1);
@orange: #f2711c;
@blue: #4085d0;
@brightBlue: rgba(70, 150, 250, 1);
@mediumGrey: rgba(100, 100, 100, 1);
@lightGrey: rgba(130, 130, 130, 0.7);

@pageBackground : rgba(45, 45, 45, 1.0);
@background: lighten(@pageBackground, 3);
@menuBackground: lighten(@pageBackground, 2);
@background1: lighten(@pageBackground, 6);
@background2: lighten(@pageBackground, 10);
@partialSegmentBackground: lighten(@pageBackground, 1);
@secondarySegmentBackground: rgb(60, 60, 60);

@blueBackground: fade(screen(@background, rgba(50,100,160,1.0)),30%);
@greenBackground: fade(screen(@background, rgba(40,180,40,1.0)),30%);
@redBackground: fade(screen(@background, rgba(140,60,60,1.0)),30%);
@purpleBackground: fade(screen(@background, rgba(100,60,140,1.0)),30%);
@warningBackground: @redBackground;

@inputBackground: rgba(245,245,245,1.0);
@disabledInputBackground: rgba(210,210,210,1.0);

// Dark control elements
/*
@inputBackground: rgba(80, 80, 80, 1.0);
*/

@menuActiveBorder: @blue;
@menuActiveBackground: rgba(255,255,255,0.75);
@secondaryMenuColor: fadeout(@lightText, 10%, relative);
@secondaryMenuActiveColor: rgba(245, 245, 245, 0.925);

@blackButtonBackground: rgba(34, 35, 36, 1.0);
@greyButtonBackground: rgba(130, 130, 130, 1.0);

@internalBorderColor: rgba(34, 36, 38, 0.1);
// @internalBorderColor: rgba(130, 130, 130, 0.5);
@solidInternalBorderColor: rgba(130, 130, 130, 0.5);

@buttonBackground: rgb(224, 225, 226);

@subtleButtonColor: rgba(75, 75, 75, 1.0);
@subtleButtonHoverColor: lighten(@subtleButtonColor, 2);

.ui.segment,
.ui.segments,
.ui.menu,
.ui.message {
    box-shadow: none !important;
}

.ui.buttons.selection {
    .ui.active.button {
        // color: @darkText;
        background-color: #a8a9aa;
    }
}

.ui.segments > .ui.no-padding.segment > .ui.button,
.ui.segments > .ui.no-padding.segment > .ui.buttons > .ui.button,
.ui.attached.no-padding.segment > .ui.button,
.ui.attached.no-padding.segment > .ui.buttons > .ui.button {
    color: @text;
    background-color: @subtleButtonColor;
}

.ui.segments > .ui.no-padding.segment > .ui.button:hover,
.ui.segments > .ui.no-padding.segment > .ui.buttons > .ui.button:hover,
.ui.attached.no-padding.segment > .ui.button:hover,
.ui.attached.no-padding.segment > .ui.buttons > .ui.button:hover {
    background-color: @subtleButtonHoverColor;
}

.ui.segments > .ui.no-padding.segment > .ui.button:active,
.ui.segments > .ui.no-padding.segment > .ui.buttons > .ui.button:active,
.ui.attached.no-padding.segment > .ui.button:active,
.ui.attached.no-padding.segment > .ui.buttons > .ui.button:active {
    background-color: @subtleButtonHoverColor;
}

.article-filters {
    .filters-summary {
        .ui.label {
            font-weight: normal;
            background-color: @greyButtonBackground;
            color: @lightText;
        }
    }
}

.ui.checkbox {
    input:focus~label,
    input:hover~label,
    > label:hover,
    > label:active {
        color: @text;
    }
}

.ui.label.selection-label {
    border-width: 2px;
    background-color: @lightText;
    color: @darkText;
}

.ui.segment > .ui.fluid.label {
    background-color: @background2;
}

div.article-answers {
    .ui.divided.list {
        > .item {
            // border-top: 1px solid rgba(200,200,200,0.4);
        }
        > .item:first-child {
            border-top: 0;
        }
    }
}
