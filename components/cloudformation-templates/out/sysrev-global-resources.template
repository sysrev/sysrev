{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "This template creates the global resources needed by Sysrev services.",
  "Outputs" : {
    "AdminAccessCloudFormationServiceRoleArn" : {
      "Export" : {
        "Name" : {
          "Fn::Sub" : "${AWS::StackName}-AdminAccessCloudFormationServiceRoleArn"
        }
      },
      "Value" : {
        "Fn::GetAtt" : [ "AdminAccessCloudFormationServiceRole", "Arn" ]
      }
    },
    "CloudFrontOAI" : {
      "Export" : {
        "Name" : {
          "Fn::Sub" : "${AWS::StackName}-CloudFrontOAI"
        }
      },
      "Value" : {
        "Ref" : "CloudFrontOAI"
      }
    },
    "DatapubBucket" : {
      "Export" : {
        "Name" : {
          "Fn::Sub" : "${AWS::StackName}-DatapubBucket"
        }
      },
      "Value" : {
        "Ref" : "DatapubBucket"
      }
    },
    "DevelopersGroupArn" : {
      "Export" : {
        "Name" : {
          "Fn::Sub" : "${AWS::StackName}-DevelopersGroupArn"
        }
      },
      "Value" : {
        "Fn::GetAtt" : [ "DevelopersGroup", "Arn" ]
      }
    }
  },
  "Resources" : {
    "AdminAccessCloudFormationServicePassRolePolicy" : {
      "Properties" : {
        "PolicyDocument" : {
          "Statement" : [ {
            "Action" : [ "iam:PassRole" ],
            "Effect" : "Allow",
            "Resource" : {
              "Fn::GetAtt" : [ "AdminAccessCloudFormationServiceRole", "Arn" ]
            }
          } ],
          "Version" : "2012-10-17"
        }
      },
      "Type" : "AWS::IAM::ManagedPolicy"
    },
    "AdminAccessCloudFormationServiceRole" : {
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Statement" : [ {
            "Action" : [ "sts:AssumeRole" ],
            "Effect" : "Allow",
            "Principal" : {
              "Service" : "cloudformation.amazonaws.com"
            }
          } ],
          "Version" : "2012-10-17"
        },
        "ManagedPolicyArns" : [ "arn:aws:iam::aws:policy/AdministratorAccess" ],
        "RoleName" : "AdminAccessCloudFormationServiceRole"
      },
      "Type" : "AWS::IAM::Role"
    },
    "CloudFormationCreateUpdatePolicy" : {
      "Properties" : {
        "PolicyDocument" : {
          "Statement" : [ {
            "Action" : [ "cloudformation:*" ],
            "Effect" : "Allow",
            "Resource" : "*"
          }, {
            "Action" : [ "cloudformation:DeleteStack" ],
            "Effect" : "Deny",
            "Resource" : "*"
          } ],
          "Version" : "2012-10-17"
        }
      },
      "Type" : "AWS::IAM::ManagedPolicy"
    },
    "CloudFormationReadPolicy" : {
      "Properties" : {
        "PolicyDocument" : {
          "Statement" : [ {
            "Action" : [ "cloudformation:DescribeStackEvents", "cloudformation:DescribeStackResources", "cloudformation:ListStacks" ],
            "Effect" : "Allow",
            "Resource" : "*"
          } ],
          "Version" : "2012-10-17"
        }
      },
      "Type" : "AWS::IAM::ManagedPolicy"
    },
    "CloudFrontOAI" : {
      "Properties" : {
        "CloudFrontOriginAccessIdentityConfig" : {
          "Comment" : "CloudFront Origin Access Identity to allow access to S3 objects"
        }
      },
      "Type" : "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    },
    "CloudWatchReadPolicy" : {
      "Properties" : {
        "PolicyDocument" : {
          "Statement" : [ {
            "Action" : [ "cloudwatch:DescribeAlarmHistory", "cloudwatch:DescribeAlarms", "cloudwatch:DescribeAlarmsForMetric", "cloudwatch:DescribeAnomalyDetectors", "cloudwatch:DescribeInsightRules", "cloudwatch:GetDashboard", "cloudwatch:GetInsightRuleReport", "cloudwatch:GetMetricData", "cloudwatch:GetMetricStatistics", "cloudwatch:GetMetricStream", "cloudwatch:GetMetricWidgetImage", "cloudwatch:ListDashboards", "cloudwatch:ListMetricStreams", "cloudwatch:ListMetrics", "cloudwatch:ListTagsForResource", "logs:DescribeDestinations", "logs:DescribeExportTasks", "logs:DescribeLogGroups", "logs:DescribeLogStreams", "logs:DescribeMetricFilters", "logs:DescribeQueries", "logs:DescribeQueryDefinitions", "logs:DescribeResourcePolicies", "logs:DescribeSubscriptionFilters", "logs:FilterLogEvents", "logs:GetLogDelivery", "logs:GetLogEvents", "logs:GetLogGroupFields", "logs:GetLogRecord", "logs:GetQueryResults", "logs:ListLogDeliveries", "logs:ListTagsLogGroup", "logs:StartQuery", "logs:StopQuery", "logs:TestMetricFilter" ],
            "Effect" : "Allow",
            "Resource" : "*"
          } ],
          "Version" : "2012-10-17"
        }
      },
      "Type" : "AWS::IAM::ManagedPolicy"
    },
    "DatapubBucket" : {
      "Properties" : {
        "AccessControl" : "Private",
        "CorsConfiguration" : {
          "CorsRules" : [ {
            "AllowedMethods" : [ "GET", "HEAD" ],
            "AllowedOrigins" : [ "https://staging.sysrev.com", "https://sysrev.com", "https://www.sysrev.com" ],
            "MaxAge" : 3600
          } ]
        },
        "PublicAccessBlockConfiguration" : {
          "BlockPublicAcls" : true,
          "BlockPublicPolicy" : true,
          "IgnorePublicAcls" : true,
          "RestrictPublicBuckets" : true
        },
        "Tags" : [ {
          "Key" : "grant",
          "Value" : "thrive"
        } ]
      },
      "Type" : "AWS::S3::Bucket"
    },
    "DatapubBucketPolicy" : {
      "Properties" : {
        "Bucket" : {
          "Ref" : "DatapubBucket"
        },
        "PolicyDocument" : {
          "Statement" : [ {
            "Action" : "s3:GetObject",
            "Effect" : "Allow",
            "Principal" : {
              "AWS" : {
                "Fn::Join" : [ "", [ "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ", {
                  "Ref" : "CloudFrontOAI"
                } ] ]
              }
            },
            "Resource" : {
              "Fn::Join" : [ "", [ "arn:aws:s3:::", {
                "Ref" : "DatapubBucket"
              }, "/*" ] ]
            }
          } ],
          "Version" : "2012-10-17"
        }
      },
      "Type" : "AWS::S3::BucketPolicy"
    },
    "DevelopersGroup" : {
      "Properties" : {
        "GroupName" : "sysrev-developers",
        "ManagedPolicyArns" : [ {
          "Ref" : "CloudFormationReadPolicy"
        }, {
          "Ref" : "CloudWatchReadPolicy"
        }, {
          "Ref" : "ListBucketsPolicy"
        } ]
      },
      "Type" : "AWS::IAM::Group"
    },
    "GitHubActionsUser" : {
      "Properties" : {
        "ManagedPolicyArns" : [ {
          "Ref" : "AdminAccessCloudFormationServicePassRolePolicy"
        }, {
          "Ref" : "CloudFormationCreateUpdatePolicy"
        }, {
          "Ref" : "PackerBuildPolicy"
        } ],
        "UserName" : "github-actions"
      },
      "Type" : "AWS::IAM::User"
    },
    "ListBucketsPolicy" : {
      "Properties" : {
        "PolicyDocument" : {
          "Statement" : [ {
            "Action" : [ "s3:ListAllMyBuckets" ],
            "Effect" : "Allow",
            "Resource" : "*"
          } ],
          "Version" : "2012-10-17"
        }
      },
      "Type" : "AWS::IAM::ManagedPolicy"
    },
    "PackerBuildPolicy" : {
      "Properties" : {
        "PolicyDocument" : {
          "Statement" : [ {
            "Action" : [ "ec2:AttachVolume", "ec2:AuthorizeSecurityGroupIngress", "ec2:CopyImage", "ec2:CreateImage", "ec2:CreateKeypair", "ec2:CreateSecurityGroup", "ec2:CreateSnapshot", "ec2:CreateTags", "ec2:CreateVolume", "ec2:DeleteKeyPair", "ec2:DeleteSecurityGroup", "ec2:DeleteSnapshot", "ec2:DeleteVolume", "ec2:DeregisterImage", "ec2:DescribeImageAttribute", "ec2:DescribeImages", "ec2:DescribeInstances", "ec2:DescribeInstanceStatus", "ec2:DescribeRegions", "ec2:DescribeSecurityGroups", "ec2:DescribeSnapshots", "ec2:DescribeSubnets", "ec2:DescribeTags", "ec2:DescribeVolumes", "ec2:DetachVolume", "ec2:GetPasswordData", "ec2:ModifyImageAttribute", "ec2:ModifyInstanceAttribute", "ec2:ModifySnapshotAttribute", "ec2:RegisterImage", "ec2:RunInstances", "ec2:StopInstances", "ec2:TerminateInstances" ],
            "Effect" : "Allow",
            "Resource" : "*"
          } ],
          "Version" : "2012-10-17"
        }
      },
      "Type" : "AWS::IAM::ManagedPolicy"
    }
  }
}