{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Conditions" : {
    "HasKeyName" : {
      "Fn::Not" : [ {
        "Fn::Equals" : [ "", {
          "Ref" : "KeyName"
        } ]
      } ]
    }
  },
  "Description" : "This template creates the Datapub AutoScalingGroup.",
  "Parameters" : {
    "AMI" : {
      "Type" : "AWS::EC2::Image::Id"
    },
    "AutoScalingMaxSize" : {
      "AllowedPattern" : "[1-9][0-9]*",
      "Type" : "String"
    },
    "AutoScalingMinSize" : {
      "AllowedPattern" : "[1-9][0-9]*",
      "Type" : "String"
    },
    "DatapubBucket" : {
      "MaxLength" : 63,
      "MinLength" : 3,
      "Type" : "String"
    },
    "KeyName" : {
      "Default" : "",
      "Type" : "String"
    },
    "RDSAllocatedStorage" : {
      "AllowedPattern" : "[1-9][0-9][0-9]+",
      "Description" : "Minimum allocated storage in GB. Must be at least 100.",
      "Type" : "String"
    },
    "RDSInstanceClass" : {
      "Type" : "String"
    },
    "RDSIops" : {
      "MinValue" : 1000,
      "Type" : "Number"
    }
  },
  "Resources" : {
    "AutoScalingGroup" : {
      "CreationPolicy" : {
        "AutoScalingCreationPolicy" : {
          "MinSuccessfulInstancesPercent" : 90
        },
        "ResourceSignal" : {
          "Timeout" : "PT10M"
        }
      },
      "Properties" : {
        "Cooldown" : "30",
        "HealthCheckGracePeriod" : 300,
        "HealthCheckType" : "ELB",
        "LaunchTemplate" : {
          "LaunchTemplateId" : {
            "Ref" : "LaunchTemplate"
          },
          "Version" : {
            "Fn::GetAtt" : [ "LaunchTemplate", "LatestVersionNumber" ]
          }
        },
        "MaxSize" : {
          "Ref" : "AutoScalingMaxSize"
        },
        "MinSize" : {
          "Ref" : "AutoScalingMinSize"
        },
        "Tags" : [ {
          "Key" : "Name",
          "PropagateAtLaunch" : true,
          "Value" : "Datapub"
        } ],
        "TargetGroupARNs" : [ {
          "Ref" : "LoadBalancerTargetGroup"
        } ],
        "VPCZoneIdentifier" : {
          "Fn::Split" : [ ",", {
            "Fn::ImportValue" : "Sysrev-Regional-Resources-VpcSubnetIds"
          } ]
        }
      },
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy" : {
        "AutoScalingReplacingUpdate" : {
          "WillReplace" : true
        }
      }
    },
    "AutoScalingPolicy" : {
      "Properties" : {
        "AutoScalingGroupName" : {
          "Ref" : "AutoScalingGroup"
        },
        "PolicyType" : "TargetTrackingScaling",
        "TargetTrackingConfiguration" : {
          "PredefinedMetricSpecification" : {
            "PredefinedMetricType" : "ASGAverageCPUUtilization"
          },
          "TargetValue" : 50.0
        }
      },
      "Type" : "AWS::AutoScaling::ScalingPolicy"
    },
    "DatapubBucketFullAccessPolicy" : {
      "Properties" : {
        "PolicyDocument" : {
          "Statement" : [ {
            "Action" : "*",
            "Effect" : "Allow",
            "Resource" : {
              "Fn::Join" : [ "", [ "arn:aws:s3:::", {
                "Ref" : "DatapubBucket"
              } ] ]
            }
          }, {
            "Action" : "*",
            "Effect" : "Allow",
            "Resource" : {
              "Fn::Join" : [ "", [ "arn:aws:s3:::", {
                "Ref" : "DatapubBucket"
              }, "/*" ] ]
            }
          } ],
          "Version" : "2012-10-17"
        }
      },
      "Type" : "AWS::IAM::ManagedPolicy"
    },
    "DatapubSecurityGroup" : {
      "Properties" : {
        "GroupDescription" : "Datapub Servers",
        "SecurityGroupIngress" : [ {
          "FromPort" : 8888,
          "IpProtocol" : "tcp",
          "SourceSecurityGroupId" : {
            "Fn::ImportValue" : "Sysrev-Regional-Resources-LoadBalancerSecurityGroupId"
          },
          "ToPort" : 8888
        } ],
        "VpcId" : {
          "Fn::ImportValue" : "Sysrev-Regional-Resources-VpcId"
        }
      },
      "Type" : "AWS::EC2::SecurityGroup"
    },
    "InstancePolicy" : {
      "Properties" : {
        "PolicyDocument" : {
          "Statement" : [ {
            "Action" : [ "elasticloadbalancing:DescribeTargetHealth" ],
            "Effect" : "Allow",
            "Resource" : "*"
          }, {
            "Action" : [ "secretsmanager:GetSecretValue" ],
            "Effect" : "Allow",
            "Resource" : {
              "Ref" : "RDSMasterCredentials"
            }
          }, {
            "Action" : [ "secretsmanager:GetSecretValue" ],
            "Effect" : "Allow",
            "Resource" : {
              "Ref" : "SysrevDevKey"
            }
          } ],
          "Version" : "2012-10-17"
        }
      },
      "Type" : "AWS::IAM::ManagedPolicy"
    },
    "InstanceProfile" : {
      "Properties" : {
        "Path" : "/Sysrev/Datapub/",
        "Roles" : [ {
          "Ref" : "InstanceRole"
        } ]
      },
      "Type" : "AWS::IAM::InstanceProfile"
    },
    "InstanceRole" : {
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Statement" : [ {
            "Action" : [ "sts:AssumeRole" ],
            "Effect" : "Allow",
            "Principal" : {
              "Service" : [ "ec2.amazonaws.com" ]
            }
          } ],
          "Version" : "2012-10-17"
        },
        "ManagedPolicyArns" : [ "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore", {
          "Ref" : "DatapubBucketFullAccessPolicy"
        }, {
          "Ref" : "InstancePolicy"
        }, {
          "Fn::ImportValue" : "Sysrev-Regional-Resources-CredentialsKeyUsePolicyArn"
        } ],
        "Path" : "/Sysrev/Datapub/"
      },
      "Type" : "AWS::IAM::Role"
    },
    "LaunchTemplate" : {
      "Properties" : {
        "LaunchTemplateData" : {
          "BlockDeviceMappings" : [ {
            "DeviceName" : "/dev/xvda",
            "Ebs" : {
              "DeleteOnTermination" : true,
              "Encrypted" : true,
              "VolumeType" : "gp3"
            }
          } ],
          "IamInstanceProfile" : {
            "Arn" : {
              "Fn::GetAtt" : [ "InstanceProfile", "Arn" ]
            }
          },
          "ImageId" : {
            "Ref" : "AMI"
          },
          "InstanceType" : "t3a.small",
          "KeyName" : {
            "Fn::If" : [ "HasKeyName", {
              "Ref" : "KeyName"
            }, {
              "Ref" : "AWS::NoValue"
            } ]
          },
          "Monitoring" : {
            "Enabled" : true
          },
          "SecurityGroupIds" : [ {
            "Ref" : "DatapubSecurityGroup"
          } ],
          "UserData" : {
            "Fn::Base64" : {
              "Fn::Join" : [ "", [ "#!/usr/bin/env bash\n", "set -oeux \n", "state=\n", "until [ \"$state\" == \"\\\"healthy\\\"\" ]; do sleep 10;\n", "state=$(aws --region ", {
                "Ref" : "AWS::Region"
              }, " elbv2 describe-target-health", " --target-group-arn ", {
                "Ref" : "LoadBalancerTargetGroup"
              }, " --targets Id=$(ec2metadata --instance-id)", " --query TargetHealthDescriptions[0].TargetHealth.State); done\n", "cfn-signal -s true ", " --stack ", {
                "Ref" : "AWS::StackName"
              }, " --resource AutoScalingGroup", " --region ", {
                "Ref" : "AWS::Region"
              } ] ]
            }
          }
        }
      },
      "Type" : "AWS::EC2::LaunchTemplate"
    },
    "LoadBalancerListenerRule" : {
      "Properties" : {
        "Actions" : [ {
          "TargetGroupArn" : {
            "Ref" : "LoadBalancerTargetGroup"
          },
          "Type" : "forward"
        } ],
        "Conditions" : [ {
          "Field" : "host-header",
          "HostHeaderConfig" : {
            "Values" : [ {
              "Fn::ImportValue" : "Sysrev-Regional-Resources-DatapubDomainName"
            } ]
          }
        } ],
        "ListenerArn" : {
          "Fn::ImportValue" : "Sysrev-Regional-Resources-LoadBalancerHTTPSListenerArn"
        },
        "Priority" : 200
      },
      "Type" : "AWS::ElasticLoadBalancingV2::ListenerRule"
    },
    "LoadBalancerTargetGroup" : {
      "Properties" : {
        "HealthCheckPath" : "/health",
        "HealthCheckProtocol" : "HTTP",
        "Matcher" : {
          "HttpCode" : "200-299"
        },
        "Port" : 8888,
        "Protocol" : "HTTP",
        "ProtocolVersion" : "HTTP2",
        "TargetType" : "instance",
        "VpcId" : {
          "Fn::ImportValue" : "Sysrev-Regional-Resources-VpcId"
        }
      },
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup"
    },
    "RDSInstance" : {
      "DeletionPolicy" : "Snapshot",
      "Properties" : {
        "AllocatedStorage" : {
          "Ref" : "RDSAllocatedStorage"
        },
        "AllowMajorVersionUpgrade" : true,
        "AutoMinorVersionUpgrade" : true,
        "BackupRetentionPeriod" : 7,
        "CopyTagsToSnapshot" : true,
        "DBInstanceClass" : {
          "Ref" : "RDSInstanceClass"
        },
        "DBInstanceIdentifier" : "datapubio",
        "DBName" : "datapub",
        "DBSubnetGroupName" : {
          "Fn::ImportValue" : "Sysrev-Regional-Resources-RDSSubnetGroupName"
        },
        "DeletionProtection" : true,
        "EnablePerformanceInsights" : true,
        "Engine" : "postgres",
        "EngineVersion" : "13.3",
        "Iops" : {
          "Ref" : "RDSIops"
        },
        "MasterUserPassword" : {
          "Fn::Sub" : "{{resolve:secretsmanager:${RDSMasterCredentials}::password}}"
        },
        "MasterUsername" : {
          "Fn::Sub" : "{{resolve:secretsmanager:${RDSMasterCredentials}::username}}"
        },
        "MaxAllocatedStorage" : 1000,
        "MultiAZ" : false,
        "PreferredBackupWindow" : "08:48-09:18",
        "PreferredMaintenanceWindow" : "Sun:05:57-Sun:06:27",
        "PubliclyAccessible" : false,
        "StorageEncrypted" : true,
        "Tags" : [ {
          "Key" : "grant",
          "Value" : "1R43DA052916-01"
        } ],
        "VPCSecurityGroups" : [ {
          "Ref" : "RDSSecurityGroup"
        } ]
      },
      "Type" : "AWS::RDS::DBInstance",
      "UpdateReplacePolicy" : "Snapshot"
    },
    "RDSMasterCredentials" : {
      "Properties" : {
        "GenerateSecretString" : {
          "ExcludeCharacters" : "\"@/\\",
          "GenerateStringKey" : "password",
          "PasswordLength" : 32,
          "SecretStringTemplate" : "{\"username\": \"postgres\"}"
        },
        "KmsKeyId" : {
          "Fn::ImportValue" : "Sysrev-Regional-Resources-CredentialsKeyId"
        }
      },
      "Type" : "AWS::SecretsManager::Secret"
    },
    "RDSSecurityGroup" : {
      "Properties" : {
        "GroupDescription" : "Datapub RDS Instances",
        "SecurityGroupIngress" : [ {
          "FromPort" : 5432,
          "IpProtocol" : "tcp",
          "SourceSecurityGroupId" : {
            "Ref" : "DatapubSecurityGroup"
          },
          "ToPort" : 5432
        } ],
        "VpcId" : {
          "Fn::ImportValue" : "Sysrev-Regional-Resources-VpcId"
        }
      },
      "Type" : "AWS::EC2::SecurityGroup"
    },
    "RecordSetGroup" : {
      "Properties" : {
        "HostedZoneId" : {
          "Fn::ImportValue" : "Sysrev-Regional-Resources-DatapubHostedZoneId"
        },
        "RecordSets" : [ {
          "AliasTarget" : {
            "DNSName" : {
              "Fn::ImportValue" : "Sysrev-Regional-Resources-LoadBalancerDNSName"
            },
            "HostedZoneId" : {
              "Fn::ImportValue" : "Sysrev-Regional-Resources-LoadBalancerCanonicalHostedZoneId"
            }
          },
          "Name" : {
            "Fn::ImportValue" : "Sysrev-Regional-Resources-DatapubDomainName"
          },
          "Type" : "A"
        }, {
          "AliasTarget" : {
            "DNSName" : {
              "Fn::ImportValue" : "Sysrev-Regional-Resources-LoadBalancerDNSName"
            },
            "HostedZoneId" : {
              "Fn::ImportValue" : "Sysrev-Regional-Resources-LoadBalancerCanonicalHostedZoneId"
            }
          },
          "Name" : {
            "Fn::ImportValue" : "Sysrev-Regional-Resources-DatapubDomainName"
          },
          "Type" : "AAAA"
        } ]
      },
      "Type" : "AWS::Route53::RecordSetGroup"
    },
    "SysrevDevKey" : {
      "Properties" : {
        "GenerateSecretString" : {
          "GenerateStringKey" : "key",
          "PasswordLength" : 32,
          "SecretStringTemplate" : "{}"
        },
        "KmsKeyId" : {
          "Fn::ImportValue" : "Sysrev-Regional-Resources-CredentialsKeyId"
        }
      },
      "Type" : "AWS::SecretsManager::Secret"
    }
  }
}