name: "Deploy CloudFormation Global and Regional Resources Stacks"
concurrency: sysrev-cloudformation-${{ github.ref_name }}

on:
  push:
    branches:
      - staging
      - production
    paths:
      - '.github/workflows/cloudformation.yml'
      - 'components/cloudformation-templates/out/sysrev-global-resources.template'
      - 'components/cloudformation-templates/out/sysrev-regional-resources.template'

jobs:
  deploy-global-resources:
    outputs:
      cloudfront-oai: ${{ steps.deploy.outputs.CloudFrontOAI }}
      code-bucket: ${{ steps.deploy.outputs.CodeBucket }}
      datapub-hosted-zone-id: ${{ steps.deploy.outputs.DatapubHostedZoneId }}
      datapub-zone-apex: ${{ steps.deploy.outputs.DatapubZoneApex }}
      service-role-arn: ${{ steps.deploy.outputs.AdminAccessCloudFormationServiceRoleArn }}
      sysrev-hosted-zone-id: ${{ steps.deploy.outputs.SysrevHostedZoneId }}
      sysrev-zone-apex: ${{ steps.deploy.outputs.SysrevZoneApex }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS staging credentials
        if: github.ref_name == 'staging'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: us-east-1
          mask-aws-account-id: no

      - name: Configure AWS prod credentials
        if: github.ref_name == 'production'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: us-east-1
          mask-aws-account-id: no

      - name: Set staging parameters
        if: github.ref_name == 'staging'
        run: |
          echo "GLOBAL_PARAMS=DatapubZoneApex=datapubdev.net,Env=staging,InsilicaZoneApex=,SysrevZoneApex=sysrevdev.net" >> $GITHUB_ENV

      - name: Set production parameters
        if: github.ref_name == 'production'
        run: |
          echo "GLOBAL_PARAMS=DatapubZoneApex=datapub.dev,Env=prod,InsilicaZoneApex=insilica.co,SysrevZoneApex=sysrev.com" >> $GITHUB_ENV

      - name: Deploy Sysrev-Global-Resources template
        id: deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.4
        with:
          name: Sysrev-Global-Resources
          capabilities: "CAPABILITY_IAM,CAPABILITY_NAMED_IAM"
          no-fail-on-empty-changeset: '1'
          parameter-overrides: ${{ env.GLOBAL_PARAMS }}
          template: components/cloudformation-templates/out/sysrev-global-resources.template

      - name: Echo template outputs
        run: |
          echo "Developers Group ARN: ${{ steps.deploy.outputs.DevelopersGroupArn }}"

  deploy-regional-resources:
    needs: deploy-global-resources
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS staging credentials
        if: github.ref_name == 'staging'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: us-east-1
          mask-aws-account-id: no

      - name: Configure AWS prod credentials
        if: github.ref_name == 'production'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: us-east-1
          mask-aws-account-id: no

      - name: Deploy Sysrev-Regional-Resources template
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.4
        with:
          name: Sysrev-Regional-Resources
          no-fail-on-empty-changeset: '1'
          parameter-overrides: CloudFrontOAI=${{ needs.deploy-global-resources.outputs.cloudfront-oai }},CodeBucket=${{ needs.deploy-global-resources.outputs.code-bucket }},DatapubZoneApex=${{ needs.deploy-global-resources.outputs.datapub-zone-apex }},DatapubHostedZoneId=${{ needs.deploy-global-resources.outputs.datapub-hosted-zone-id }},NumberOfAZs=6,SysrevHostedZoneId=${{ needs.deploy-global-resources.outputs.sysrev-hosted-zone-id }},SysrevZoneApex=${{ needs.deploy-global-resources.outputs.sysrev-zone-apex }}
          role-arn: ${{ needs.deploy-global-resources.outputs.service-role-arn }}
          template: components/cloudformation-templates/out/sysrev-regional-resources.template
